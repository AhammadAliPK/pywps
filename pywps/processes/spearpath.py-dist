"""
pywps process example:

spearpath:   find shortest path at GRASS spearfish demo dataset
"""
# Author:	Jachym Cepicky
# Lince: 
# 
# Web Processing Service implementation
# Copyright (C) 2006 Stepan Kafka
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA


import os,time,string,sys,shutil
from pywps.Wps.process import GRASSWPSProcess

class Process(GRASSWPSProcess) :
    def __init__(self):
        GRASSWPSProcess.__init__(self,
        Identifier = "spearpath",
        processVersion = "0.1",
        storeSupported = "true",
        Title="Find the shortes path on the roads map on Spearfish dataset",
        grassLocation="/var/www/wps/spearfish60/")

        self.AddLiteralInput(Identifier = "x1",
                            Title = "Start x coordinate",
                            type = type(0.0)
                            )
        self.AddLiteralInput(Identifier = "y1",
                            Title = "Start y coordinate",
                            type = type(0.0)
                            )
        self.AddLiteralInput(Identifier = "x2",
                            Title = "Stop x coordinate",
                            type = type(0.0)
                            )
        self.AddLiteralInput(Identifier = "y2",
                            Title = "Stop y coordinate",
                            type = type(0.0)
                            )
        self.AddComplexValueReferenceOutput(
                Identifier= "outputReference",
                Title = "Resulting output map",
                Formats = ["text/xml"])

        self.AddComplexValueOutput(
                Identifier= "outputData",
                Title = "Resulting output map",
                Formats = ["text/xml"])

    # --------------------------------------------------------------------
    def execute(self):
        """
        This function serves like simple GRASS - python script

        It returns None, if process succeed or String if process failed
        """
        self.GCmd("g.region -d")


        self.GCmd("v.net.path in=roads out=path","0 %s %s %s %s" % (self.GetInputValue('x1'),
                self.GetInputValue('y1'),
                self.GetInputValue('x2'),
                self.GetInputValue('y2')))

        self.GCmd("v.out.ogr format=GML input=path dsn=out.xml olayer=path.xml")

        if "out.xml" in os.listdir(os.curdir):
            shutil.copy("out.xml","out2.xml")
            self.SetOutputValue('outputReference',"out.xml")
            self.SetOutputValue('outputData',"out2.xml")
            return
        else:
            return "Ouput file not created!"
